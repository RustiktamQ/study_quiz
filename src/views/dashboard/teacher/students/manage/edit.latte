{include '../../partials/header.latte'}

<script>
	window.addEventListener("load", () => {
	    const preloader = document.getElementById("preloader");
	    if (preloader) {
	        clearTimeout(showMessageTimeout);
	        preloader.style.transition = "opacity 0.5s ease";
	        preloader.style.opacity = "0";
	        setTimeout(() => {
	            preloader.style.display = "none";
	        }, 500);
	    }
	});
	const showMessageTimeout = setTimeout(() => {
	    const loadingMessage = document.getElementById("loading-message");
	    if (loadingMessage) {
	        loadingMessage.style.opacity = "1";
	    }
	}, 10000);
</script>

<div id="preloader" class="preloader fixed inset-0 z-50 bg-white flex flex-col items-center justify-center">
	<div class="animate-spin inline-block w-8 h-8 border-[3px] border-current border-t-transparent text-green-600 rounded-full" role="status" aria-label="Загрузка...">
		<span class="sr-only">Загрузка...</span>
	</div>
	<p id="loading-message" class="mt-4 text-gray-500 opacity-0 transition-opacity duration-500">Все еще загружается...</p>
</div>

{include '../../partials/sidebar.latte'}

<div class="w-full lg:ps-64">
	<div class="p-4 sm:p-6 space-y-4 sm:space-y-6">
		<div class="mb-4">
			<nav class="flex" aria-label="Хлебные крошки">
				<ol class="inline-flex items-center space-x-1 md:space-x-3">
					<li class="inline-flex items-center">
						<a href="/dashboard/teacher" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-green-600">
							<svg class="w-3 h-3 me-2.5" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
								<path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
							</svg>
							Ученики
						</a>
					</li>
					<li aria-current="page">
						<div class="flex items-center">
							<svg class="w-3 h-3 text-gray-400 mx-1" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
								<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
							</svg>
							<span class="ms-1 text-sm font-medium text-gray-500 md:ms-2">Редактировать ученика</span>
						</div>
					</li>
				</ol>
			</nav>
			<h1 class="font-bold text-black text-2xl mt-2">
				Редактировать ученика: <span class="text-green-600">{$student->name}</span>
			</h1>
		</div>

		<div class="bg-white border border-gray-200 rounded-xl shadow-sm p-4 max-w-xl sm:p-6">
			<div>
				<input type="hidden" name="student_id" value="{$student->id}">

				<div class="space-y-4">
					<div>
						<label for="student-name" class="block text-sm font-medium mb-1 text-gray-700">Имя ученика</label>
						<input type="text" id="student_name"  value="{$student->name}"
							class="py-2 px-3 block w-full border border-gray-200 rounded-lg text-sm focus:border-green-500 focus:ring-green-500"
							required>
					</div>

					<div>
						<label for="student-grade" class="block text-sm font-medium mb-1 text-gray-700">Предпочитаемый класс обучения</label>
						<select id="student_grade"
							class="py-2 px-3 pe-9 block w-full border border-gray-200 rounded-lg text-sm focus:border-green-500 focus:ring-green-500">
							<option disabled value="">Выберите класс...</option>
							<option value="0" {if $student->grade == 0}selected{/if}>Дошкольный</option>
							<option value="1" {if $student->grade == 1}selected{/if}>Детский сад</option>
							<option value="2" {if $student->grade == 2}selected{/if}>Первый класс</option>
							<option value="3" {if $student->grade == 3}selected{/if}>Второй класс</option>
							<option value="4" {if $student->grade == 4}selected{/if}>Третий класс</option>
							<option value="5" {if $student->grade == 5}selected{/if}>Четвертый класс</option>
							<option value="6" {if $student->grade == 6}selected{/if}>Пятый класс</option>
							<option value="7" {if $student->grade == 7}selected{/if}>Шестой класс</option>
							<option value="8" {if $student->grade == 8}selected{/if}>Седьмой класс</option>
							<option value="9" {if $student->grade == 9}selected{/if}>Восьмой класс</option>
							<option value="10" {if $student->grade == 10}selected{/if}>Старшая школа</option>
						</select>
					</div>
				</div>

				<div class="mt-6 flex justify-between items-center">
					<div id="delete_student_form">
						<input type="hidden" name="student_id" value="{$student->id}">
						<button id="unlinkBtn" type="button" class="transition py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-transparent bg-red-100 text-red-600 hover:bg-red-200">
							<svg class="size-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"><path d="M10 13.229q.213.349.504.654a3.56 3.56 0 0 0 4.454.59q.391-.24.73-.59l3.239-3.372c1.43-1.49 1.43-3.904 0-5.394a3.564 3.564 0 0 0-5.183 0l-.714.743"/><path d="m10.97 18.14l-.713.743a3.564 3.564 0 0 1-5.184 0c-1.43-1.49-1.43-3.905 0-5.394l3.24-3.372a3.564 3.564 0 0 1 5.183 0q.291.305.504.654M21 16h-2.079M16 21v-2.079M3 8h2.079M8 3v2.079"/></g></svg>
							Отвязать ученика
						</button>
					</div>
					<div class="flex justify-end gap-x-2">
						<a href="/dashboard/teacher/students" class="transition py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-gray-200 bg-white text-gray-800 shadow-sm hover:bg-gray-50">
							Отмена
						</a>
						<button id="submit" type="submit" class="transition py-2 px-3 inline-flex items-center gap-x-2 text-sm font-semibold rounded-lg border border-transparent bg-green-500 text-white hover:bg-green-600">
							Сохранить изменения
						</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script n:syntax=off>
	function getUserId() {
		const currentUrl = window.location.pathname;
		const quizId = currentUrl.substring(currentUrl.lastIndexOf('/') + 1);
		return quizId;
	}

	function getUserData() {
		return JSON.parse(
		decodeURIComponent(
			document.cookie.split('; ')
			.find(row => row.startsWith('user='))
			?.split('=')[1] || '{}'
			)   
		);
	}

    async function updateStudentData(user_id, teacher_id, data) {
        try {
            const response = await fetch(`${window.location.origin}/api/teacher/student/update`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    user_id,
					teacher_id,
                    data
                })
            });
    
            return await response.json();
        } catch (error) {
            return error.message;
        }
    }

	async function unlink(user_id, teacher_id) {
        try {
            const response = await fetch(`${window.location.origin}/api/teacher/student/unlink`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    user_id,
					teacher_id
                })
            });
    
            return await response.json();
        } catch (error) {
            return error.message;
        }
    }

	const user_id = getUserId();
	const teacher_id = getUserData().id;

	submit.addEventListener('click', async () => {
		const res = await updateStudentData(user_id, teacher_id, {
			student_name: student_name.value,
			student_grade: student_grade.value
		});

		if (res.success) {
            Toastify({
              text: "Success",
              duration: 3000,
              newWindow: true,
              close: true,
              gravity: "top",
              position: "right",
              stopOnFocus: true,
              style: {
                      background: "linear-gradient(to right,rgb(34, 197, 94),rgb(34, 197, 94))",
                  },
            }).showToast();
      } else if (res.error) {
            Toastify({
              text: res.message,
              duration: 3000,
              newWindow: true,
              close: true,
              gravity: "top",
              position: "right",
              stopOnFocus: true,
              style: {
                      background: "linear-gradient(to right, rgb(255, 102, 102), rgb(255, 153, 153))",
                  },
            }).showToast();
      }
	});

	unlinkBtn.addEventListener('click', async () => {
	    if (confirm('Вы уверены, что хотите удалить этого ученика? Это действие необратимо.')) {
	        const res = await unlink(user_id, teacher_id);

			if (res.success) {
				Toastify({
				text: "Success",
				duration: 3000,
				newWindow: true,
				close: true,
				gravity: "top",
				position: "right",
				stopOnFocus: true,
				style: {
						background: "linear-gradient(to right,rgb(34, 197, 94),rgb(34, 197, 94))",
					},
				}).showToast();
      		} else if (res.error) {
				Toastify({
				text: res.message,
				duration: 3000,
				newWindow: true,
				close: true,
				gravity: "top",
				position: "right",
				stopOnFocus: true,
				style: {
						background: "linear-gradient(to right, rgb(255, 102, 102), rgb(255, 153, 153))",
					},
				}).showToast();
      		}
	    }
	});
</script>
{include '../../partials/footer.latte'}
